{"ast":null,"code":"var _jsxFileName = \"/Users/shaurybaranwal/Documents/projects/real-time-dashboard/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { LineChart, Line, BarChart, Bar, PieChart, Pie, XAxis, YAxis, Tooltip, Legend, CartesianGrid } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('https://api.openweathermap.org/data/2.5/weather?q=New%20York&appid=YOUR_API_KEY&units=metric');\n        setWeatherData(response.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const formatTime = timestamp => {\n    const date = new Date(timestamp * 1000);\n    return date.toLocaleTimeString();\n  };\n  const formatData = data => {\n    return [{\n      name: 'Temperature',\n      value: data.main.temp\n    }, {\n      name: 'Feels Like',\n      value: data.main.feels_like\n    }, {\n      name: 'Humidity',\n      value: data.main.humidity\n    }];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Temperature Trend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n          width: 400,\n          height: 300,\n          data: weatherData.hourly,\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"dt\",\n            tickFormatter: formatTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"temp\",\n            name: \"Temperature (\\xB0C)\",\n            stroke: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Weather Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n          width: 400,\n          height: 300,\n          data: formatData(weatherData),\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"value\",\n            fill: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Weather Conditions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n          width: 400,\n          height: 300,\n          children: [/*#__PURE__*/_jsxDEV(Pie, {\n            data: formatData(weatherData),\n            dataKey: \"value\",\n            nameKey: \"name\",\n            cx: \"50%\",\n            cy: \"50%\",\n            outerRadius: 100,\n            fill: \"#8884d8\",\n            label: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"BCUo9muHyxrqajg6diFxqqqjG/A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","LineChart","Line","BarChart","Bar","PieChart","Pie","XAxis","YAxis","Tooltip","Legend","CartesianGrid","jsxDEV","_jsxDEV","App","_s","weatherData","setWeatherData","fetchData","response","get","data","error","console","formatTime","timestamp","date","Date","toLocaleTimeString","formatData","name","value","main","temp","feels_like","humidity","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","hourly","dataKey","tickFormatter","strokeDasharray","type","stroke","fill","nameKey","cx","cy","outerRadius","label","_c","$RefreshReg$"],"sources":["/Users/shaurybaranwal/Documents/projects/real-time-dashboard/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { LineChart, Line, BarChart, Bar, PieChart, Pie, XAxis, YAxis, Tooltip, Legend, CartesianGrid } from 'recharts';\n\nconst App = () => {\n  const [weatherData, setWeatherData] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\n          'https://api.openweathermap.org/data/2.5/weather?q=New%20York&appid=YOUR_API_KEY&units=metric'\n        );\n        setWeatherData(response.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const formatTime = (timestamp) => {\n    const date = new Date(timestamp * 1000);\n    return date.toLocaleTimeString();\n  };\n\n  const formatData = (data) => {\n    return [\n      { name: 'Temperature', value: data.main.temp },\n      { name: 'Feels Like', value: data.main.feels_like },\n      { name: 'Humidity', value: data.main.humidity },\n    ];\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Weather Dashboard</h1>\n      {weatherData && (\n        <div className=\"charts-container\">\n          <div className=\"chart\">\n            <h2>Temperature Trend</h2>\n            <LineChart width={400} height={300} data={weatherData.hourly}>\n              <XAxis dataKey=\"dt\" tickFormatter={formatTime} />\n              <YAxis />\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <Tooltip />\n              <Legend />\n              <Line type=\"monotone\" dataKey=\"temp\" name=\"Temperature (Â°C)\" stroke=\"#8884d8\" />\n            </LineChart>\n          </div>\n          <div className=\"chart\">\n            <h2>Weather Details</h2>\n            <BarChart width={400} height={300} data={formatData(weatherData)}>\n              <XAxis dataKey=\"name\" />\n              <YAxis />\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"value\" fill=\"#8884d8\" />\n            </BarChart>\n          </div>\n          <div className=\"chart\">\n            <h2>Weather Conditions</h2>\n            <PieChart width={400} height={300}>\n              <Pie data={formatData(weatherData)} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={100} fill=\"#8884d8\" label />\n              <Tooltip />\n              <Legend />\n            </PieChart>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}